/***************************************************************************
** File: Animal.h
** Author: Jake Statz
** Date: 5/10/2020
** Description: Declares the animal class and is supporting functions
**************************************************************************/
#ifndef ANIMAL_H
#define ANIMAL_H

#include <iostream>

using namespace std;

class Animal {
private:
	int cost;	//Cost of the animal
	int foodx;	//Food cost multiplier
	int id;		//Animal's "ID" number

protected:
	int age;	//Age of the animal
	int babies; //Number of babies each birth
	 
public:
	/********************************************************
	** Function: Constructor for the animals
	** Description: Create a new animal for when it is born or bought from the shop
	** Input: int cost, int foodx, int babies, int id, int age
	** Pre-Conditions: none
	** Post-Conditions: Member variables get initialized
	********************************************************/
	Animal(int cost = 0, int foodx = 1, int babies = 0, int id = -1, int age = 0);

	/********************************************************
	** Function: get_id()
	** Description: Gets the animals ID number
	** Input: none
	** Pre-Conditions: none
	** Post-Conditions: Returns the animals ID number
	********************************************************/
	int get_id();

	/********************************************************
	** Function: get_cost()
	** Description: Gets the animals cost
	** Input: none
	** Pre-Conditions: none
	** Post-Conditions: Returns the animals cost
	********************************************************/
	int get_cost();

	/********************************************************
	** Function: get_foodx()
	** Description: Gets the multiplier used to calculate the animals food cost
	** Input: none
	** Pre-Conditions: none
	** Post-Conditions: Returns the food cost multiplier
	********************************************************/
	int get_foodx();

	/********************************************************
	** Function: get_age()
	** Description: Gets the age of the animal
	** Input: none
	** Pre-Conditions: none
	** Post-Conditions: Returns the animals age 
	********************************************************/
	int get_age();

	/********************************************************
	** Function: get_babies()
	** Description: Gets the number of babies that animal has each time it gives birth
	** Input: none
	** Pre-Conditions: none
	** Post-Conditions: Returns the number of babies
	********************************************************/
	int get_babies();

	/********************************************************
	** Function: increace_age()
	** Description: increments the age
	** Input: none
	** Pre-Conditions: none
	** Post-Conditions: age is incremented
	********************************************************/
	void increase_age();

	/********************************************************
	** Function: revenue()
	** Description: Calculates the revenue generated by the animals
	** Input: bool bonus
	** Pre-Conditions: none
	** Post-Conditions: Returns the revenue
	********************************************************/
	virtual int revenue(bool bonus);

	/********************************************************
	** Function: sick_cost()
	** Description: Calculates the cost of medicine to heal the animal that is sick
	** Input: none
	** Pre-Conditions: none
	** Post-Conditions: Returns the cost of medicine
	********************************************************/
	int sick_cost();

	/********************************************************
	** Function: birth()
	** Description: Calls for a animal
	** Input: none
	** Pre-Conditions: none
	** Post-Conditions: Calls for a new animal to be created
	********************************************************/
	virtual Animal* birth() = 0;
};
#endif
